Steps to cross-build quickBlocks under Linux (Fedora 25 x64 distribution) environment:

-------------------
Requirements:
-------------------

Fedora release 25 (Twenty Five)
NAME=Fedora
VERSION="25 (Cloud Edition)"
ID=fedora
VERSION_ID=25
PRETTY_NAME="Fedora 25 (Cloud Edition)"
ANSI_COLOR="0;34"
CPE_NAME="cpe:/o:fedoraproject:fedora:25"
HOME_URL="https://fedoraproject.org/"
BUG_REPORT_URL="https://bugzilla.redhat.com/"
REDHAT_BUGZILLA_PRODUCT="Fedora"
REDHAT_BUGZILLA_PRODUCT_VERSION=25
REDHAT_SUPPORT_PRODUCT="Fedora"
REDHAT_SUPPORT_PRODUCT_VERSION=25
PRIVACY_POLICY_URL=https://fedoraproject.org/wiki/Legal:PrivacyPolicy
VARIANT="Cloud Edition"
VARIANT_ID=cloud
Fedora release 25 (Twenty Five)
Fedora release 25 (Twenty Five)
cpe:/o:fedoraproject:fedora:25

---------------------
Steps
---------------------


1) Install basic development tools (it includes git client):

   > (sudo) dnf group install 'Development Tools'

2) Install c++ compilers:

   > sudo dnf install gcc-c++

3) Install cmake:

   > (sudo) dnf install cmake  (as root or with sudo)

4) Install python:

   > (sudo) dnf install python python-devel (as root or with sudo)

5) Install CURL

   >  (sudo) dnf install libcurl-devel (as root or with sudo)

6) Create the workspace folder. At command line execute:

   > cd <USER_DIRECTORY>    (where USER_DIRECTORY is the directory we want to wokr at)
   > mkdir workspace
   > cd workspace
   
 
7) Clone github repository (master branch by default):

   > git clone https://github.com/Great-Hill-Corporation/quickBlocks.git .



8) Do the cmake + make steps

  >  mkdir build
  >  cd build
  >  cmake ../src
  >  make

------------------------------------------------------------- Testing tools obtained -------------------------------------------------------------------------------------------

[qb@fedora-2gb-lon1-01 bin]$ ./getLogs

  Not enough arguments presented.

  Usage:    ./getLogs [-o|-t|-v|-h]  
  Purpose:  This is what the program does.
             
  Where:    
        -o  (or --option1)    option one
        -t  (or --thing)      option two
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Powered by QuickBlocks
[qb@fedora-2gb-lon1-01 bin]$ ./getReceipt
Hello world
[qb@fedora-2gb-lon1-01 bin]$ ./getTrans

  Not enough arguments presented.

  Usage:    ./getTrans [-f|-t|-v|-h] hash bn.transID bh.transID  
  Purpose:  Retrieve an Ethereum transaction from either QuickBlocks or a running node.
            --note: 'hash' and 'blockHash' must start with '0x'.  
  Where:    
        hash                  one or more hashes of Ethereum transactions, or
        bn.transID            blockNumber.transactionID of one or more Ethereum transactions, or
        bh.transID            blockHash.transactionID of one or more Ethereum transactions
        -f  (or --fromNode)   retrieve the transaction from the running node (from QuickBlocks otherwise)
        -t  (or --trace)      return the trace of the transaction in addition to regular details
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Powered by QuickBlocks
[qb@fedora-2gb-lon1-01 bin]$ ./ethName

  Not enough arguments presented.

  Usage:    ./ethName [-a|-c|-e|-l|-m|-s|-v|-h] term [name]  
  Purpose:  Find a name given an Ethereum address, or find an address given a name.
             
  Where:    
        term [name]           search terms (required)
        -a  (or --addrOnly)   export only the associated address to be used as input to further commands
        -c  (or --count)      print only the count of the number of matches
        -e  (or --edit)       edit the name database
        -l  (or --list)       list all names in the database
        -m  (or --matchCase)  matches must agree in case (the default is to ignore case)
        -s  (or --source)     search 'source' field as well name and address (the default)
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Powered by QuickBlocks
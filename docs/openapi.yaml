openapi: 3.0.0
info:
  title: TrueBlocks API
  description: An API for accessing cached Ethereum blockchain data and accounts
  contact:
    email: jrush@quickblocks.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.8.04
servers:
- url: http://localhost:8080
  description: Local endpoints
- url: https://virtserver.swaggerhub.com/trueblocks/TrueBlocks/0.8.04
  description: SwaggerHub API Auto Mocking
tags:
- name: Accounts
  description: Access and cache transactional data
- name: ChainData
  description: Access and cache blockchain-related data
- name: ChainState
  description: Access to account and token state
- name: Admin
  description: Control the scraper and build the index
- name: Other
  description: Access to other and external data
paths:
  /list:
    get:
      tags:
      - Accounts
      summary: List every appearance of an address anywhere on the chain.
      description: List every appearance of an address anywhere on the chain.
      operationId: accounts-list
      parameters:
      - name: addrs
        in: query
        description: one or more addresses (0x...) to list
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /export:
    get:
      tags:
      - Accounts
      summary: Export full detail of transactions for one or more addresses.
      description: Export full detail of transactions for one or more addresses.
      operationId: accounts-export
      parameters:
      - name: addrs
        in: query
        description: one or more addresses (0x...) to export
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: topics
        in: query
        description: filter by one or more log topics (only for --logs option)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: fourbytes
        in: query
        description: filter by one or more fourbytes (only for transactions and trace options)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: appearances
        in: query
        description: export a list of appearances
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: receipts
        in: query
        description: export receipts instead of transaction list
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: logs
        in: query
        description: export logs instead of transaction list
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: traces
        in: query
        description: export traces instead of transaction list
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: accounting
        in: query
        description: export accounting records instead of transaction list
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tokens
        in: query
        description: export accounting for ERC 20 tokens (assumes ETH accounting as above)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: articulate
        in: query
        description: articulate transactions, traces, logs, and outputs
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: cache_txs
        in: query
        description: write transactions to the cache (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: cache_traces
        in: query
        description: write traces to the cache (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: skip_ddos
        in: query
        description: toggle skipping over 2016 dDos transactions ('on' by default)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: max_traces
        in: query
        description: if --skip_ddos is on, this many traces defines what a ddos transaction
          is (default = 250)
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: freshen
        in: query
        description: freshen but do not print the exported data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: factory
        in: query
        description: scan for contract creations from the given address(es) and report
          address of those contracts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: emitter
        in: query
        description: for log export only, export only if one of the given export addresses emitted the event
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: source
        in: query
        description: for log export only, export only one of these addresses emitted the event
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: relevant
        in: query
        description: for log export only, if true export only logs relevant to one of the given export addresses
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: count
        in: query
        description: only available for --appearances mode, if present return only
          the number of records
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: first_block
        in: query
        description: first block to process (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: last_block
        in: query
        description: last block to process (inclusive)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: first_record
        in: query
        description: the first record to process
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: max_records
        in: query
        description: the maximum number of records to process before reporting
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: clean
        in: query
        description: clean (i.e. remove duplicate appearances) from all existing monitors
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: staging
        in: query
        description: enable search of staging (not yet finalized) folder
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unripe
        in: query
        description: enable search of unripe (neither staged nor finalized) folder
          (assumes --staging)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: load
        in: query
        description: a comma separated list of dynamic traversers to load
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /monitors:
    get:
      tags:
      - Accounts
      summary: Add, remove, clean, and list address monitors.
      description: Add, remove, clean, and list address monitors.
      operationId: accounts-monitors
      parameters:
      - name: addrs
        in: query
        description: one or more addresses (0x...) to list
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: delete
        in: query
        description: delete a previously created monitor (or undelete if already deleted)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: remove
        in: query
        description: remove a previously deleted monitor
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /names:
    get:
      tags:
      - Accounts
      summary: Query addresses or names of well known accounts.
      description: Query addresses or names of well known accounts.
      operationId: accounts-names
      parameters:
      - name: terms
        in: query
        description: a space separated list of one or more search terms
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: expand
        in: query
        description: expand search to include all fields (default searches name, address,
          and symbol only)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: match_case
        in: query
        description: do case-sensitive search
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: all
        in: query
        description: include all accounts in the search
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: custom
        in: query
        description: include your custom named accounts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: prefund
        in: query
        description: include prefund accounts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: named
        in: query
        description: include well know token and airdrop addresses in the search
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: other
        in: query
        description: export other addresses if found
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: addr
        in: query
        description: display only addresses in the results (useful for scripting)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: entities
        in: query
        description: display entity data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: tags
        in: query
        description: export the list of tags and subtags only
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: to_custom
        in: query
        description: for editCmd only, is the edited name a custom name or not
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: clean
        in: query
        description: clean the data (addrs to lower case, sort by addr)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /abis:
    get:
      tags:
      - Accounts
      summary: Fetches the ABI for a smart contract.
      description: Fetches the ABI for a smart contract.
      operationId: accounts-abis
      parameters:
      - name: addrs
        in: query
        description: list of one or more smart contracts whose ABI to grab from EtherScan
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: known
        in: query
        description: load common 'known' ABIs from cache
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sol
        in: query
        description: file name of .sol file from which to create a new known abi (without
          .sol)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: find
        in: query
        description: try to search for a function declaration given a four byte code
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: source
        in: query
        description: show the source of the ABI information
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: classes
        in: query
        description: generate classDefinitions folder and class definitions
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /blocks:
    get:
      tags:
      - ChainData
      summary: Retrieve one or more blocks from the chain or local cache.
      description: Retrieve one or more blocks from the chain or local cache.
      operationId: chaindata-blocks
      parameters:
      - name: blocks
        in: query
        description: a space-separated list of one or more blocks to retrieve
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: hashes
        in: query
        description: display only transaction hashes, default is to display full transaction
          detail
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: uncles
        in: query
        description: display uncle blocks (if any) instead of the requested block
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: trace
        in: query
        description: export the traces from the block as opposed to the block data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: apps
        in: query
        description: display all address appearances in the block
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: uniq
        in: query
        description: display only uniq address appearances per block
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: uniq_tx
        in: query
        description: display only uniq address appearances per transaction
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: count
        in: query
        description: display counts of appearances (for --apps, --uniq, or --uniq_tx)
          or transactions
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: cache
        in: query
        description: force a write of the block to the cache
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /transactions:
    get:
      tags:
      - ChainData
      summary: Retrieve one or more transactions from the chain or local cache.
      description: Retrieve one or more transactions from the chain or local cache.
      operationId: chaindata-transactions
      parameters:
      - name: transactions
        in: query
        description: a space-separated list of one or more transaction identifiers
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: articulate
        in: query
        description: articulate the retrieved data if ABIs can be found
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: trace
        in: query
        description: include the transaction's traces in the results
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: uniq
        in: query
        description: display a list of uniq addresses found in the transaction instead of the underlying data
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: cache
        in: query
        description: force the results of the query into the tx cache (and the trace cache if applicable)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /receipts:
    get:
      tags:
      - ChainData
      summary: Retrieve receipts for the given transaction(s).
      description: Retrieve receipts for the given transaction(s).
      operationId: chaindata-receipts
      parameters:
      - name: transactions
        in: query
        description: a space-separated list of one or more transaction identifiers
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: articulate
        in: query
        description: articulate the retrieved data if ABIs can be found
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /logs:
    get:
      tags:
      - ChainData
      summary: Retrieve logs for the given transaction(s).
      description: Retrieve logs for the given transaction(s).
      operationId: chaindata-logs
      parameters:
      - name: transactions
        in: query
        description: a space-separated list of one or more transaction identifiers
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: topic
        in: query
        description: filter by one or more log topics (not implemented)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: source
        in: query
        description: export only if the given address emitted the event (not implemented)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: articulate
        in: query
        description: articulate the retrieved data if ABIs can be found
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /traces:
    get:
      tags:
      - ChainData
      summary: Retrieve traces for the given transaction(s).
      description: Retrieve traces for the given transaction(s).
      operationId: chaindata-traces
      parameters:
      - name: transactions
        in: query
        description: a space-separated list of one or more transaction identifiers
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: articulate
        in: query
        description: articulate the retrieved data if ABIs can be found
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: filter
        in: query
        description: call the node's `trace_filter` routine with bang-seperated filter
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: statediff
        in: query
        description: export state diff traces (not implemented)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: count
        in: query
        description: show the number of traces for the transaction only (fast)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: skip_ddos
        in: query
        description: skip over the 2016 ddos during export ('on' by default)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: max
        in: query
        description: if --skip_ddos is on, this many traces defines what a ddos transaction
          is (default = 250)
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /when:
    get:
      tags:
      - ChainData
      summary: Find block(s) based on date, blockNum, timestamp, or 'special'.
      description: Find block(s) based on date, blockNum, timestamp, or 'special'.
      operationId: chaindata-when
      parameters:
      - name: block_list
        in: query
        description: one or more dates, block numbers, hashes, or special named blocks
          (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: list
        in: query
        description: export a list of the 'special' blocks
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: timestamps
        in: query
        description: ignore other options and generate timestamps only
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: skip
        in: query
        description: only applicable if --timestamps is on, the step between block
          numbers in the export
        required: false
        style: form
        explode: true
        schema:
          type: number
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /state:
    get:
      tags:
      - ChainState
      summary: Retrieve account balance(s) for one or more addresses at given block(s).
      description: Retrieve account balance(s) for one or more addresses at given block(s).
      operationId: chainstate-state
      parameters:
      - name: addrs
        in: query
        description: one or more addresses (0x...) from which to retrieve balances
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: blocks
        in: query
        description: an optional list of one or more blocks at which to report balances,
          defaults to 'latest'
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: parts
        in: query
        description: control which state to export
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - none
            - some
            - all
            - balance
            - nonce
            - code
            - storage
            - deployed
            - accttype
      - name: changes
        in: query
        description: only report a balance when it changes from one block to the next
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: no_zero
        in: query
        description: suppress the display of zero balance accounts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: call
        in: query
        description: a bang-separated string consisting of address!4-byte!bytes
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /tokens:
    get:
      tags:
      - ChainState
      summary: Retrieve token balance(s) for one or more addresses at given block(s).
      description: Retrieve token balance(s) for one or more addresses at given block(s).
      operationId: chainstate-tokens
      parameters:
      - name: addrs2
        in: query
        description: two or more addresses (0x...), the first is an ERC20 token, balances
          for the rest are reported
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: blocks
        in: query
        description: an optional list of one or more blocks at which to report balances,
          defaults to 'latest'
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: parts
        in: query
        description: one or more parts of the token information to retreive
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - name
            - symbol
            - decimals
            - totalSupply
            - version
            - none
            - all
      - name: by_acct
        in: query
        description: consider each address an ERC20 token except the last, whose balance
          is reported for each token
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: no_zero
        in: query
        description: suppress the display of zero balance accounts
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /status:
    get:
      tags:
      - Admin
      summary: Report on the status of the TrueBlocks system.
      description: Report on the status of the TrueBlocks system.
      operationId: admin-status
      parameters:
      - name: modes
        in: query
        description: the type of status info to retrieve
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - index
            - monitors
            - entities
            - names
            - abis
            - caches
            - some
            - all
      - name: details
        in: query
        description: include details about items found in monitors, slurps, abis,
          or price caches
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: types
        in: query
        description: for caches mode only, which type(s) of cache to report
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - blocks
            - transactions
            - traces
            - slurps
            - prices
            - all
      - name: depth
        in: query
        description: for cache mode only, number of levels deep to report
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: report
        in: query
        description: show a summary of the current status of TrueBlocks (deprecated)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: terse
        in: query
        description: show a terse summary report
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: get_config
        in: query
        description: returns JSON data of the editable configuration file items
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: set_config
        in: query
        description: accepts JSON in an env variable and writes it to configuration
          files
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: test_start
        in: query
        description: first block to process (inclusive -- testing only)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: test_end
        in: query
        description: last block to process (inclusive -- testing only)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: ui_help
        in: query
        description: internal use only
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /scrape:
    get:
      tags:
      - Admin
      summary: Scan the chain and update the TrueBlocks index of appearances.
      description: Scan the chain and update the TrueBlocks index of appearances.
      operationId: admin-scrape
      parameters:
      - name: mode
        in: query
        description: control the block and account scrapers
        required: true
        style: form
        explode: true
        schema:
          type: string
          enum:
          - run
          - quit
          - pause
          - restart
      - name: tool
        in: query
        description: process the index, monitors, or both (none means process timestamps
          only)
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - monitors
            - index
            - none
            - both
      - name: n_blocks
        in: query
        description: maximum number of blocks to process (defaults to 5000)
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: n_block_procs
        in: query
        description: number of block channels for blaze
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: n_addr_procs
        in: query
        description: number of address channels for blaze
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: pin
        in: query
        description: pin new chunks (and blooms) to IPFS (requires Pinata key and running IPFS node)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sleep
        in: query
        description: the number of seconds to sleep between passes (default 14)
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: staging
        in: query
        description: pass through to chifra export --freshen (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: unripe
        in: query
        description: pass through to chifra export --freshen (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: cache_txs
        in: query
        description: pass through to chifra export --freshen (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: cache_traces
        in: query
        description: pass through to chifra export --freshen (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: load
        in: query
        description: pass through to chifra export --freshen (see notes)
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /pins:
    get:
      tags:
      - Admin
      summary: Manage pinned index of appearances and associated bloom filters.
      description: Manage pinned index of appearances and associated bloom filters.
      operationId: admin-pins
      parameters:
      - name: list
        in: query
        description: list the index and bloom filter hashes from local manifest or pinning service
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: init
        in: query
        description: initialize local index by downloading bloom filters from pinning service
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: init_all
        in: query
        description: initialize local index by downloading both bloom filters and index chunks
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: sleep
        in: query
        description: the number of seconds to sleep between requests during init (default .25)
        required: false
        style: form
        explode: true
        schema:
          type: number
      - name: remote
        in: query
        description: applicable only to --list mode, recover the manifest from pinning service
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: pin_locally
        in: query
        description: pin all local files in the index to an IPFS store (requires IPFS)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /quotes:
    get:
      tags:
      - Other
      summary: Freshen and/or display Ethereum price data.
      description: Freshen and/or display Ethereum price data.
      operationId: other-quotes
      parameters:
      - name: freshen
        in: query
        description: Freshen price database (append new data)
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: period
        in: query
        description: increment of display
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - "5"
          - "15"
          - "30"
          - "60"
          - "120"
          - "240"
          - "1440"
          - "10080"
          - hourly
          - daily
          - weekly
      - name: pair
        in: query
        description: which price pair to freshen or list (see Poloniex)
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: feed
        in: query
        description: the feed for the price data
        required: false
        style: form
        explode: true
        schema:
          type: string
          enum:
          - poloniex
          - maker
          - tellor
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
  /slurp:
    get:
      tags:
      - Other
      summary: Fetch data from EtherScan for any address.
      description: Fetch data from EtherScan for any address.
      operationId: other-slurp
      parameters:
      - name: addrs
        in: query
        description: one or more addresses to slurp from Etherscan
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: blocks
        in: query
        description: an optional range of blocks to slurp
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: types
        in: query
        description: one or more types of transactions to request
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
            enum:
            - ext
            - int
            - token
            - nfts
            - miner
            - all
      - name: appearances
        in: query
        description: show only the blocknumer.tx_id appearances of the exported transactions
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      responses:
        "200":
          description: status of the scraper
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/response'
        "400":
          description: bad input parameter
components:
  schemas:
    response:
      required:
      - result
      type: object
      properties:
        data:
          type: object
          example:
          - $ref: '#/components/schemas/scrape_response'
          - $ref: '#/components/schemas/trans_response'
        error:
          type: array
          example:
          - error 1
          - error 2
          items:
            type: string
    scrape_response:
      type: string
      example: Scrape response
    trans_response:
      type: string
      example: Trans response

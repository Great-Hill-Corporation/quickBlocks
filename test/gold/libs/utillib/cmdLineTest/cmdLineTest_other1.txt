cmdLineTest argc: 2 [1:--file:cmd_file_other1] 
cmdLineTest --file:cmd_file_other1 
--------------------------------------------------------------------------------
boolOption: 0
boolSet: 0
numOption: 12
stringOption: 
testNum: 5
0. Running Test1
	000.000. 5. int  == 12                    ==> passed '(opts.numOption == 12)' is true
--------------------------------------------------------------------------------
boolOption: 0
boolSet: 0
numOption: -100
stringOption: 
testNum: 6
0. Running Test1
	000.000. 6. int  == -100                  ==> passed '(opts.numOption == -100)' is true
--------------------------------------------------------------------------------
boolOption: 0
boolSet: 0
numOption: 12
stringOption: 
testNum: 7
0. Running Test1
	000.000. 7. uint == 12                    ==> passed '(opts.numOption == 12)' is true
--------------------------------------------------------------------------------
boolOption: 0
boolSet: 0
numOption: -1
stringOption: 
testNum: 8
0. Running Test1
	000.000. 8. uint == -100 (false)          ==> passed '(opts.numOption == NOPOS)' is true

  Invalid option: --string:String

  Usage:    cmdLineTest [-b|-i|-u|-s|-r|-l|-v|-h] testNum  
  Purpose:  Tests various command line behaviour.
             
  Where:    
	testNum               the number of the test to run (required)
	-b  (--bool value)    enter a boolean value (either `0`, `1`, `false`, or `true`)
	-i  (--int value)     enter any numeric value
	-u  (--uint value)    enter any any numeric value greater than or equal to zero
	-s  (--string value)  enter any value
	-r  (--range range)   enter a range of numeric values
	-l  (--list list)     enter a list of value separated by commas (no spaces or quoted)
	-v  (--verbose)       set verbose level. Either -v, --verbose or -v:n where 'n' is level
	-h  (--help)          display this help screen

  Powered by QuickBlocks

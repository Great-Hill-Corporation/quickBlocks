#!/usr/bin/env bash
#
# cmp_ethscan
#
#   Retrieve a list of historical transactions from EtherScan, process it to remove
#   unneeded data, compare to (assumed-to-exist) similar list created by qblocks
#
#   cmp_ethscan <address> <name> <optional_folder>
#
#   where
#       <address> is the address of the account you wish to scrape
#       <name>    is the user assigned name for the contract (such as token symbol for example)
#       <folder>  is an optional folder in which which is pre-pended to filename
#
#--
# Make input params easier to see, set some defaults
#
address=$1
filename=$3$2-$1

#--
# These are the files we will be comparing
#
qb_result=../monitors/txt/$filename.txt
es_result=txt/$filename.txt

#--
# There are two ways to retieve the lists of transactions from EtherScan.
#
# The first uses curl and jq and is faster, but has limitations:
#       (1) it only returns 10,000 records (to fix this, you would have to paginate), and
#       (2) EtherScan does not return a 'transactionIndex' for internal transactions
#           (other parts of qblocks needs transactionIndex)
#
# ./scripts/slurp_using_curl $1 $2 $3
#
# Both of these issues are fixed by using the second method instead. This method uses 'ethslurp'
# to extract the transactions from EtherScan. It's slower (but only the first time it runs 
# against an address -- be patient). It creates a binary cache, and therefore subsequent
# retrievals are much faster (even that curl/jq). It also keeps track of its last visit and
# can thereby 'freshen' its data. The previous method starts at the beginning each time.
#
# Our preference is the second method. Each method takes the same three pararameters as this script.
#
./scripts/slurp_using_ethslurp $1 $2 $3

#--
# We need a little sed program in a file called 'z'
#
bytes_only=`echo $1 | sed 's/0x//'`
echo $bytes_only | sed 's/^/s\/0x\//' | sed 's/$/\//' >z

#--
# Figure out if there are any records in qblock but not etherscan, then use getTrans to see if qblocks is right or wrong
#
qbnes=results/$3$2-$1_qb_not_es
echo "Looking for qblocks records that are not in etherscan"
diff --suppress-common-lines -y $qb_result $es_result | grep "<" | cut  -c1-20  | cut -f1,2 | sed 's/$/ 0x/' | sed -f z | sed 's/^/.\/check_node /' >x
chmod uog+x x
./x | tee $qbnes.txt
nano $qbnes.txt

#--
# Figure out if there are any records in qblock but not etherscan, then use getTrans to see if qblocks is right or wrong
#
esnqb=results/$3$2-$1_es_not_qb
echo "Looking for records from etherscan that do not appear in qblocks"
diff --suppress-common-lines -y $qb_result $es_result | grep ">" | cut -c15-100 | cut -f2,3 | sed 's/$/ 0x/' | sed -f z | sed 's/^/.\/check_node /' >x
chmod uog+x x
./x | tee $esnqb.txt
nano $esnqb.txt

#--
# Finally look for records in both that are different
#
chg=results/$3$2-$1_changes
echo "Looking for common records with changes"
diff --suppress-common-lines -y $qb_result $es_result | grep "|" | tee $chg.txt
nano $chg.txt

sleep 1
rm -f crap x y z
#rm -f results/*ext*
#rm -f results/*int*
#rm -f results/*both*

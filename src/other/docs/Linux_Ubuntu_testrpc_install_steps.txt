Steps to setup test-rpc at Ubuntu node

-------------------
Requirements:
-------------------

root@ubuntu-2gb-ams2-01:~# cat /etc/*release*
DISTRIB_ID=Ubuntu
DISTRIB_RELEASE=17.04
DISTRIB_CODENAME=zesty
DISTRIB_DESCRIPTION="Ubuntu 17.04"
NAME="Ubuntu"
VERSION="17.04 (Zesty Zapus)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 17.04"
VERSION_ID="17.04"
HOME_URL="https://www.ubuntu.com/"
SUPPORT_URL="https://help.ubuntu.com/"
BUG_REPORT_URL="https://bugs.launchpad.net/ubuntu/"
PRIVACY_POLICY_URL="https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"
VERSION_CODENAME=zesty
UBUNTU_CODENAME=zesty

---------------------
References
---------------------

https://github.com/ethereumjs/testrpc   (codes and installation - incomplete and vague)
https://tecadmin.net/install-latest-nodejs-npm-on-ubuntu/#  (good pointer to install nodejs - then we can install testrpc above)
https://github.com/ethereum/wiki/wiki/JSON-RPC#net_peercount  (testing RPC API)
http://www.techtonet.com/how-to-install-and-execute-truffle-on-an-ubuntu-16-04/  (truffle installation)


---------------------
Steps
---------------------

0) Update latest version of packages running:

   > (sudo) apt-get update
   > (sudo) apt-get upgrade

1) Install basic development tools (this package includes git client):

   > (sudo) apt-get install build-essential

  
2) Install javascript stuff (nodejs and npm)

   > (sudo) apt-get install python-software-properties
   > (sudo) curl -sL https://deb.nodesource.com/setup_6.x | sudo -E bash -
   > (sudo) apt-get install nodejs


3) Check versions installed (testrpc requires at least Node 6.9.1)

   > nodejs -v
     v6.11.2

   > npm -v
     3.10.10

3) Install CURL just to test json-RPC API

   >  (sudo) apt-get install curl



4) Insall ethereumjs-testrpc (testrpc)


   > (sudo) npm install -g ethereumjs-testrpc



5) Check installation (it is available at path for all users):

   > which testrpc
     /usr/bin/testrpc


   > file /usr/bin/testrpc   (it is a symbolic link to javascript file)
     /usr/bin/testrpc: symbolic link to ../lib/node_modules/ethereumjs-testrpc/build/cli.node.js

   
   > cd /usr/bin/../lib/node_modules/ethereumjs-testrpc/build/
   > file cli.node.js
     cli.node.js: a /usr/bin/env node script, UTF-8 Unicode text executable, with very long lines, with CRLF, LF line terminators



 6) Running it without arguments, starts with 10 accounts:

    > testrpc


EthereumJS TestRPC v4.1.1 (ganache-core: 1.1.2)

Available Accounts
==================
(0) 0xbafe8fbd3f2b6e192665f08f4846ad9200067cef
(1) 0xc4796f1a895a6069b5d1cf03e651eac0be71609e
(2) 0xc9e30a1a0fe253897caa11f941b26d6ed176ad4e
(3) 0x642500bb0e119c5dcd592b5fbdc216f1d2559039
(4) 0xbc867a6e1db54f90f8732dd3b6757d579e47a500
(5) 0x8e673827c110724004202b4a55e4d88bddd0e9ab
(6) 0xf71317dbf9274b9601ba4256a61402f9d4b09f8e
(7) 0xea54167b5128e00c33e0053eb5e16cdb3afc899c
(8) 0x53dc26fa189b0f11b09d895c0ed3b47da719e81a
(9) 0xa32e6c7e355244499a7857aaddd51cb51f8edbb3

Private Keys
==================
(0) 173890486c5f686b6e398695d044afd4e5dcface03be865ae82b8ba9c4410216
(1) 417fe909412332c1bdac273391aab9791ce97d0093be9402cf479d8715408e5c
(2) 92140373474745607412e8dc9a0ce217b1f5149e328026f075c236265ba0f4ac
(3) 8b239ac911bde9a4ffab2704c019b428fb4b9fe54b1d3fe4d4598f47de3afd31
(4) 3edc28c188754148ffc6322fe4eccb706d69e00543273ccb46d702ecb59b4e3a
(5) 30db0547f3a234769146505863fa59a2509f09ae5c49858da9496f7e4536c487
(6) 35e22c5f5c6c7b863fde21819c58f67dbdd9bb684959a6d01f439b4e3245c553
(7) aa186325e3c45580e52443a6f635338974718b234dacd50e9f1433d3d5e16abb
(8) 193b38f02d8c9a8697546631d75b917499f6b91aec80fd41a61a05327cdb34b9
(9) 7e73a1a445d3d668e088fc903875790f97a43f96274acfc13363bb2717ddb417

HD Wallet
==================
Mnemonic:      stick judge rookie save spring glass inspire blur giant shield balcony enter
Base HD Path:  m/44'/60'/0'/0/{account_index}


---------------------
Testing RPC API
---------------------
See many examples at https://github.com/ethereum/wiki/wiki/JSON-RPC#net_peercount


curl -s -X POST --data '{"jsonrpc":"2.0","method":"net_peerCount","params":[],"id":74}' -H "Content-Type: application/json"  127.0.0.1:8545 | json_pp   (-s = silent mode, json_pp: pretty print json format rx)

{
   "result" : 0,
   "id" : 74,
   "jsonrpc" : "2.0"
}


When testing, it displays the operations received at command line (while running):

eth_protocolVersion
net_version
net_peerCount
net_peerCount
net_peerCount
net_peerCount
eth_protocolVersion
eth_accounts
eth_blockNumber



  7) Install truffle to work with testrpc:

     
   >  npm install -g truffle


  8) Create your first contract using truffle:

  
  > cd $HOME
  > mkdir -p truffle/myproject
  > cd truffle/myproject
  > truffle init
  > truffle compile

  
  9) Insert them into the blockchain:


  > truffle migrate

  Using network 'development'.

Running migration: 1_initial_migration.js
  Deploying Migrations...
  ... 0xf1a2f83a777e402aa723d3208e9250047df79804703bb511bbf3a85dc98c4231
  Migrations: 0xd67aa6cb2b62d53701be7dfc1e9fa49da488d2c1
Saving successful migration to network...
  ... 0xa350759752b4c0b3f384b5f8198215e998fe2a7c52d56e1e4d91d825a710b6c9
Saving artifacts...
Running migration: 2_deploy_contracts.js
  Deploying ConvertLib...
  ... 0xf00114b170b2a5444f89168d273613b2e6dcf841fb2b34664c186a1e19d8b6ea
  ConvertLib: 0xb939ab4796af5f843ea8e61ccde346abdaa156a7
  Linking ConvertLib to MetaCoin
  Deploying MetaCoin...
  ... 0x56c78ba6079d6923360fe712a38a8d06a07e130acecd2c53dfe3c3a53c342a08
  MetaCoin: 0x578086f82ffc269c432fbbb5380d6786ea8fdd03
Saving successful migration to network...
  ... 0xf754e4ca30d32a57dec73d8aa20daa5e288089793f7165d48b7aa81254179f4d
Saving artifacts...


=============================== At testrpc console you can see =============================================


net_version
eth_accounts
eth_accounts
net_version
net_version
eth_sendTransaction

  Transaction: 0xf1a2f83a777e402aa723d3208e9250047df79804703bb511bbf3a85dc98c4231
  Contract created: 0xd67aa6cb2b62d53701be7dfc1e9fa49da488d2c1
  Gas usage: 201556
  Block Number: 1
  Block Time: Tue Aug 29 2017 14:34:37 GMT+0000 (UTC)

eth_newBlockFilter
eth_getFilterChanges
eth_getTransactionReceipt
eth_getCode
eth_uninstallFilter
eth_sendTransaction

  Transaction: 0xa350759752b4c0b3f384b5f8198215e998fe2a7c52d56e1e4d91d825a710b6c9
  Gas usage: 41965
  Block Number: 2
  Block Time: Tue Aug 29 2017 14:34:38 GMT+0000 (UTC)

eth_getTransactionReceipt
eth_accounts
net_version
net_version
eth_sendTransaction

  Transaction: 0xf00114b170b2a5444f89168d273613b2e6dcf841fb2b34664c186a1e19d8b6ea
  Contract created: 0xb939ab4796af5f843ea8e61ccde346abdaa156a7
  Gas usage: 91273
  Block Number: 3
  Block Time: Tue Aug 29 2017 14:34:38 GMT+0000 (UTC)

eth_newBlockFilter
eth_getFilterChanges
eth_getTransactionReceipt
eth_getCode
eth_uninstallFilter
eth_sendTransaction

  Transaction: 0x56c78ba6079d6923360fe712a38a8d06a07e130acecd2c53dfe3c3a53c342a08
  Contract created: 0x578086f82ffc269c432fbbb5380d6786ea8fdd03
  Gas usage: 239676
  Block Number: 4
  Block Time: Tue Aug 29 2017 14:34:38 GMT+0000 (UTC)

eth_newBlockFilter
eth_getFilterChanges
eth_getTransactionReceipt
eth_getCode
eth_uninstallFilter
eth_sendTransaction

  Transaction: 0xf754e4ca30d32a57dec73d8aa20daa5e288089793f7165d48b7aa81254179f4d
  Gas usage: 26965
  Block Number: 5
  Block Time: Tue Aug 29 2017 14:34:38 GMT+0000 (UTC)

eth_getTransactionReceipt

============================================================================



10) To start testrpc and safe the current blockchain into a given directory, you can run it this way:


    > testrpc --db /path/to/store/blockchain           (pass the --db option with an existing directory, the first time it stores the blockchain there, next times it uses the DB to load the blockchain)

Steps to cross-build quickBlocks under Linux (Centos distribution) environment:

-------------------
Requirements:
-------------------

[qb@qbcentos bin]$ cat /etc/*rele*
CentOS Linux release 7.3.1611 (Core) 
Derived from Red Hat Enterprise Linux 7.3 (Source)
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"

CENTOS_MANTISBT_PROJECT="CentOS-7"
CENTOS_MANTISBT_PROJECT_VERSION="7"
REDHAT_SUPPORT_PRODUCT="centos"
REDHAT_SUPPORT_PRODUCT_VERSION="7"

CentOS Linux release 7.3.1611 (Core) 
CentOS Linux release 7.3.1611 (Core) 
cpe:/o:centos:centos:7

---------------------
Steps
---------------------


1) Install basic development tools (it includes git client):

   as root user

   > yum groupinstall "Development Tools"

   or 

   with sudo user

   > sudo yum groupinstall "Development Tools"

2) Install cmake:

   > yum install cmake  (as root or with sudo)

3) Install python:

   > yum install python python-devel (as root or with sudo)

4) Install CURL

   > yum install libcurl-devel (as root or with sudo)

5) Create the workspace folder. At command line execute:

   > cd <USER_DIRECTORY>    (where USER_DIRECTORY is the directory we want to wokr at)
   > mkdir workspace
   > cd workspace
   
 
6) Clone github repository (master branch by default):

   > git clone https://github.com/Great-Hill-Corporation/quickBlocks.git .



7) Do the cmake + make steps

  >  mkdir build
  >  cd build
  >  cmake ../src
  >  make

------------------------------------------------------------- Testing some tools execution -------------------------------------------------------------------------------------------

[qb@qbcentos bin]$ ./ethprice

  Not enough arguments presented.

  Usage:    ./ethprice [-c|-f|-p|-w|-o|-t|-v|-h]  
  Purpose:  Freshen and/or print price quotes for the Ethereum network.
             
  Where:    
        -c  (or --clear)      Clear the database and re-download price data
        -f  (or --freshen)    Freshen database even if not needed
        -p  (or --period)     Time increment for display. Default 120 mins or :t where t is in [5|15|30|120|240|1440]
        -w  (or --when)       Time of day to start the display. :h determines the hour to start
        -o  (or --output)     Output level (default 1). :2 exposes more data per record
        -t  (or --test)       generate intermediary files but do not execute the commands
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Powered, in part, by the Poloniex APIs
  Powered by QuickBlocks
[qb@qbcentos bin]$ ./ethslurp

  Not enough arguments presented.

  Usage:    ./ethslurp [-a|-b|-d|-m|-n|-r|-f|-i|-e|-o|-l|-c|-t|-v|-h] addr  
  Purpose:  Fetches data off the Ethereum blockchain for an arbitrary account or smart contract. Optionally formats the output to your specification.
             
  Where:    
        addr                  the address of the account or contract to slurp (required)
        -a  (or --archive)    filename of output (stdout otherwise)
        -b  (or --blocks)     export records in block range (:0[:max])
        -d  (or --dates)      export records in date range (:yyyymmdd[hhmmss][:yyyymmdd[hhmmss]])
        -m  (or --max)        maximum transactions to slurp (:250000)
        -n  (or --name)       name this address
        -r  (or --rerun)      re-run the most recent slurp
        -f  (or --fmt)        pretty print, optionally add ':txt,' ':csv,' or ':html'
        -i  (or --income)     include income transactions only
        -e  (or --expense)    include expenditures only
        -o  (or --open)       open the configuration file for editing
        -l  (or --list)       list previously slurped addresses in cache
        -c  (or --clear)      clear all previously cached slurps
        -t  (or --test)       generate intermediary files but do not execute the commands
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Portions of this software are Powered by Etherscan.io APIs
  Powered by QuickBlocks
[qb@qbcentos bin]$ ./getBlock

  Not enough arguments presented.

  Usage:    ./getBlock [-f|-m|-b|-p|-t|-s|-v|-h] num  
  Purpose:  Returns block(s) from local cache (default) or directly from node.
             
  Where:    
        num                   which block (or blocks if more than one) to retreive (or use [start-stop) for range) (required)
        -f  (or --fromNode)   retreive the block(s) directly from the running node with no processing
        -m  (or --mini)       output only data fields that exist in miniBlocks and miniTrans
        -b  (or --binary)     retrieve only quickBlocks binary blocks if they exist, retrieve nothing otherwise
        -p  (or --parity)     mimic parity output using quickBlocks (i.e. quoted hexidecimal for numbers)
        -t  (or --terse)      retreive transaction hashes instead of full transactions
        -s  (or --silent)     do not print results to screen, used for speed testing
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Powered by QuickBlocks
[qb@qbcentos bin]$ ./jsonTest

  Not enough arguments presented.

  Usage:    ./jsonTest [-o|-t|-v|-h]  
  Purpose:  This is what the program does.
             
  Where:    
        -o  (or --option1)    option one
        -t  (or --thing)      option two
        -v  (or --verbose)    set verbose level. Follow with a number to set level (-v0 for silent)
        -h  (or --help)       display this help screen

  Powered by QuickBlocks
[qb@qbcentos bin]$ ./speedTest
curl_easy_perform() failed: Couldn't connect to server
[qb@qbcentos bin]$ ./stringTest
foo and bar are not equal
xfoo and xbar are not equal
foo is less than bar
xfoo is less than xbar
foo is less than or equal to bar
xfoo is less than or equal to xbar
foo is min
bar is max
green apple is not red apple
green apple is not red apple
still, green apple is an apple
and red apple is also an apple
therefore, both are apples
Please
split
this
sentence
into
tokens
Please
split
this
sentence
into
tokens
[qb@qbcentos bin]$ 
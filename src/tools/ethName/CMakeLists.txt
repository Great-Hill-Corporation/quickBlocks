# minimum cmake version supported
cmake_minimum_required (VERSION 2.6)

# application project
project (ethName)

# The sources to be used
file(GLOB SOURCE_FILES "*.cpp")

# Output
set(EXECUTABLE_OUTPUT_PATH "${CMAKE_SOURCE_DIR}/../bin")

# Define the executable to be generated
set(TOOL_NAME "ethName")
set(PROJ_NAME "tools")
add_executable(${TOOL_NAME} ${SOURCE_FILES})

# Add the project static libs at linking
target_link_libraries (${TOOL_NAME} wallet token ${BASE_LIBS})

# Testing
# Define paths to test folder and gold folder
set(TEST_EXE "${EXECUTABLE_OUTPUT_PATH}/${TOOL_NAME}")
set(TEST_PATH "${TEST_PATH}/${PROJ_NAME}/${TOOL_NAME}")
set(GOLD_PATH "${GOLD_PATH}/${PROJ_NAME}/${TOOL_NAME}")

# Additional target to make the README.md
build_readme(${CMAKE_CURRENT_SOURCE_DIR} ${TOOL_NAME})

# To run only specific tests we define a test configuration named "test_all"
add_custom_target(test-all COMMAND ${CMAKE_CTEST_COMMAND} -C test_all)

# Function to run an special or slow test case
function(run_special_test testName)
    run_the_special_test(${TEST_PATH} ${GOLD_PATH} ${testName} ${TEST_EXE} ${ARGN})
endfunction(run_special_test)

# Function to run an individual test case
function(run_test testName)
     run_the_test(${TEST_PATH} ${GOLD_PATH} ${testName} ${TEST_EXE} ${ARGN})
endfunction(run_test)

# Enter one line for each individual test
run_test("ethName_README"                                    "-th")
run_test("ethName_addr_name_case_match_both"                 "-m" " 0xcb" " Humaniq")
run_test("ethName_addr_name_count_match"                     "-c" " 0xb6" " torj")
run_test("ethName_addr_name_count_no_match"                  "-c" " 0x01" " torj")
run_test("ethName_addr_name_source_match"                    "-s" " cbCC" " Humaniq" " Ether")
run_test("ethName_addr_name_verbose_match"                   "-v" " 0xb6" " torj")
run_test("ethName_addr_no_hex_number"                        "b64" " torj")
run_test("ethName_addr_show_addr_match"                      "-a" " 0xb6")
run_test("ethName_address_match"                             "0x1")
run_test("ethName_all_options"                               "-a" " -m" " -v" " -c" " -s" " 0xb6" " torj")
run_test("ethName_duplicated_option_1"                       "-a" " -a" " -a" " -a" " 0xb6" " torj")
run_test("ethName_invalid_param_1"                           "-x" )
run_test("ethName_list"                                      "-l")
run_test("ethName_missing_param_1"                           "-m")
run_test("ethName_mixed_options_with_count_1"                "-a" " -s" " -c" " 0xb6" " torj")
run_test("ethName_name_case_match"                           "-m" " torj")
run_test("ethName_name_count_match"                          "-c" " torj")
run_test("ethName_name_long_case_match"                      "--matchCase" " torj")
run_test("ethName_name_long_count_match"                     "--count" " torj")
run_test("ethName_name_long_show_addr_match"                 "--alone" " torj")
run_test("ethName_name_long_source_match"                    "--source" " Ether")
run_test("ethName_name_long_verbose_match"                   "--verbose" " torj")
run_test("ethName_name_match"                                "torj")
run_test("ethName_name_source_match"                         "-s" " Ether")
run_test("ethName_name_verbose_match"                        "-v" " torj")
run_test("ethName_no_params"                                    )
run_test("ethName_show_version"                              "--version")
run_test("ethName_simple_search"                             "88897")
#run_test("ethName_edit"                                     "-e")
#run_test("ethName_long_edit"                                "--edit")
#run_test("ethName_mixed_options_with_edit_1"                "-e" " -s" " -a" " 0xb6" " torj")
#run_test("ethName_mixed_options_with_edit_2"                "-c" " -e" " -a" " 0xb6" " torj")

run_special_test("ethName_addr_case_match"                   "-m" " 0xcb")
run_special_test("ethName_addr_case_no_match"                "-m" " 0xCB")
run_special_test("ethName_addr_count_match"                  "-c" " 0xb6")
run_special_test("ethName_addr_count_no_match"               "-c" " 0xCB1")
run_special_test("ethName_addr_long_case_match"              "--matchCase" " 0xcb")
run_special_test("ethName_addr_long_case_no_match"           "--matchCase" " 0xCB")
run_special_test("ethName_addr_long_count_match"             "--count" " 0xb6")
run_special_test("ethName_addr_long_count_no_match"          "--count" " 0xCB1")
run_special_test("ethName_addr_long_long_show_addr_match"    "--alone" " 0xb6")
run_special_test("ethName_addr_long_name_case_match_addr"    "--matchCase" " 0xcb" " torJ")
run_special_test("ethName_addr_long_name_case_match_both"    "--matchCase" " 0xcb" " Humaniq")
run_special_test("ethName_addr_long_name_case_match_name"    "--matchCase" " 0xCB" " torj")
run_special_test("ethName_addr_long_name_case_no_match"      "--matchCase" " 0xCB" " torJ")
run_special_test("ethName_addr_long_name_count_match"        "--count" " 0xb6" " torj")
run_special_test("ethName_addr_long_name_count_no_match"     "--count" " 0x01" " torj")
run_special_test("ethName_addr_long_name_show_addr_match"    "--alone" " 0xb6" " torj")
run_special_test("ethName_addr_long_name_show_addr_no_match" "--alone" " 0x01" " torj")
run_special_test("ethName_addr_long_name_source_match"       "--source" " 1e16" " Humaniq" " Ether")
run_special_test("ethName_addr_long_name_source_no_match"    "--source" " 1e17" " Humaniq" " Ether")
run_special_test("ethName_addr_long_name_verbose_match"      "--verbose" " 0xb6" " torj")
run_special_test("ethName_addr_long_name_verbose_no_match"   "--verbose" " 0x01" " torj")
run_special_test("ethName_addr_long_show_addr_no_match"      "--alone" " 0xCB1")
run_special_test("ethName_addr_long_source_match"            "--source" " 1e16" " ETHER")
run_special_test("ethName_addr_long_source_no_match"         "--source" " 1e17" " Ether")
run_special_test("ethName_addr_long_verbose_match"           "--verbose" " 0xb6")
run_special_test("ethName_addr_long_verbose_no_match"        "--verbose" " 0xCB1")
run_special_test("ethName_addr_name_case_match_addr"         "-m" " 0xcb" " torJ")
run_special_test("ethName_addr_name_case_match_name"         "-m" " 0xCB" " torj")
run_special_test("ethName_addr_name_case_no_match"           "-m" " 0xCB" " torJ")
run_special_test("ethName_addr_name_show_addr_match"         "-a" " 0xb6 torj")
run_special_test("ethName_addr_name_show_addr_no_match"      "-a" " 0x01" " torj")
run_special_test("ethName_addr_name_source_no_match"         "-s" " cbCD" " Humaniq" " EtherScan")
run_special_test("ethName_addr_name_verbose_no_match"        "-v" " 0x01" " torj")
run_special_test("ethName_addr_show_addr_no_match"           "-a" " 0xCB1")
run_special_test("ethName_addr_source_match"                 "-s" " cbCC" " Ether")
run_special_test("ethName_addr_source_no_match"              "-s" " cbCD" " an.io")
run_special_test("ethName_addr_verbose_match"                "-v" " 0xb6")
run_special_test("ethName_addr_verbose_no_match"             "-v" " 0xCB1")
run_special_test("ethName_address_no_match"                  "0xCB1")
run_special_test("ethName_duplicated_option_2"               "-c" " -c" " 0xb6" " torj")
run_special_test("ethName_full_addr"                         "0xB64ef51C888972c908CFacf59B47C1AfBC0Ab8aC")
run_special_test("ethName_invalid_param_10"                  "--Source" " 0xb6" " torj" " other")
run_special_test("ethName_invalid_param_2"                   "-x" " torj" )
run_special_test("ethName_invalid_param_3"                   "-x" " 0xbf4ed7b27f1d666546e30d74d50d173d20bca754" )
run_special_test("ethName_invalid_param_4"                   "-x" " torj 0xbf4ed7b27f1d666546e30d74d50d173d20bca754" )
run_special_test("ethName_invalid_param_5"                   "-x" " -a" " 0xbf4ed7b27f1d666546e30d74d50d173d20bca754" )
run_special_test("ethName_invalid_param_6"                   "-t" )
run_special_test("ethName_invalid_param_7"                   "0xb6" " torj" " other")
run_special_test("ethName_invalid_param_8"                   "--sources" " 0xb6" " torj" " other")
run_special_test("ethName_invalid_param_9"                   "--SOURCE" " 0xb6" " torj" " other")
run_special_test("ethName_invalid_search"                    "0x1" " torj")
run_special_test("ethName_long_list"                         "--list")
run_special_test("ethName_missing_param_2"                   "-a")
run_special_test("ethName_missing_param_3"                   "-v")
run_special_test("ethName_missing_param_4"                   "-s")
run_special_test("ethName_mixed_options_with_count_2"        "-c" " -s" " -a" " 0xb6" " torj")
run_special_test("ethName_mixed_options_with_list_1"         "-l" " -s" " -a" " 0xb6" " torj")
run_special_test("ethName_mixed_options_with_list_2"         "-c" " -l" " -a" " 0xb6" " torj")
run_special_test("ethName_name_and_addr_match"               "0xb6" " torj")
run_special_test("ethName_name_and_addr_no_match"            "0x01" " torj")
run_special_test("ethName_name_case_no_match"                "-m" " torJ")
run_special_test("ethName_name_count_no_match"               "-c" " no_torj")
run_special_test("ethName_name_long_case_no_match"           "--matchCase" " torJ")
run_special_test("ethName_name_long_count_no_match"          "--count" " no_torj")
run_special_test("ethName_name_long_show_addr_no_match"      "--alone" " no_torj")
run_special_test("ethName_name_long_source_no_match"         "--source" " no_ETHER")
run_special_test("ethName_name_long_verbose_no_match"        "--verbose" " no_torj")
run_special_test("ethName_name_no_match"                     "torj_no_found")
run_special_test("ethName_name_show_addr_match"              "-a" " torj")
run_special_test("ethName_name_show_addr_no_match"           "-a" " no_torj")
run_special_test("ethName_name_source_no_match"              "-s" " no_Ether")
run_special_test("ethName_name_verbose_no_match"             "-v" " no_torj")
run_special_test("ethName_simple_w_space"                    "etwork" " ")
run_special_test("ethName_three_params"                      "88897" " torj" " scan")
run_special_test("ethName_too_many_terms"                    "88897" " torj" " scan" " etwork" " -s")
run_special_test("ethName_w_source"                          "etwork" " -s")

# Installation steps
install(TARGETS ${TOOL_NAME} RUNTIME DESTINATION bin)
